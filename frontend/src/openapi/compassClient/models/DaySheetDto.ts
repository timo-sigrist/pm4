/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IncidentDto } from './IncidentDto';
import {
    IncidentDtoFromJSON,
    IncidentDtoFromJSONTyped,
    IncidentDtoToJSON,
} from './IncidentDto';
import type { RatingDto } from './RatingDto';
import {
    RatingDtoFromJSON,
    RatingDtoFromJSONTyped,
    RatingDtoToJSON,
} from './RatingDto';
import type { TimestampDto } from './TimestampDto';
import {
    TimestampDtoFromJSON,
    TimestampDtoFromJSONTyped,
    TimestampDtoToJSON,
} from './TimestampDto';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './UserDto';

/**
 * 
 * @export
 * @interface DaySheetDto
 */
export interface DaySheetDto {
    /**
     * 
     * @type {number}
     * @memberof DaySheetDto
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof DaySheetDto
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof DaySheetDto
     */
    dayNotes?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DaySheetDto
     */
    confirmed?: boolean;
    /**
     * 
     * @type {Array<TimestampDto>}
     * @memberof DaySheetDto
     */
    readonly timestamps?: Array<TimestampDto>;
    /**
     * 
     * @type {Array<RatingDto>}
     * @memberof DaySheetDto
     */
    readonly moodRatings?: Array<RatingDto>;
    /**
     * 
     * @type {Array<IncidentDto>}
     * @memberof DaySheetDto
     */
    readonly incidents?: Array<IncidentDto>;
    /**
     * 
     * @type {number}
     * @memberof DaySheetDto
     */
    timeSum?: number;
    /**
     * 
     * @type {UserDto}
     * @memberof DaySheetDto
     */
    owner?: UserDto;
}

/**
 * Check if a given object implements the DaySheetDto interface.
 */
export function instanceOfDaySheetDto(value: object): boolean {
    return true;
}

export function DaySheetDtoFromJSON(json: any): DaySheetDto {
    return DaySheetDtoFromJSONTyped(json, false);
}

export function DaySheetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DaySheetDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'dayNotes': json['day_notes'] == null ? undefined : json['day_notes'],
        'confirmed': json['confirmed'] == null ? undefined : json['confirmed'],
        'timestamps': json['timestamps'] == null ? undefined : ((json['timestamps'] as Array<any>).map(TimestampDtoFromJSON)),
        'moodRatings': json['moodRatings'] == null ? undefined : ((json['moodRatings'] as Array<any>).map(RatingDtoFromJSON)),
        'incidents': json['incidents'] == null ? undefined : ((json['incidents'] as Array<any>).map(IncidentDtoFromJSON)),
        'timeSum': json['timeSum'] == null ? undefined : json['timeSum'],
        'owner': json['owner'] == null ? undefined : UserDtoFromJSON(json['owner']),
    };
}

export function DaySheetDtoToJSON(value?: DaySheetDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'day_notes': value['dayNotes'],
        'confirmed': value['confirmed'],
        'timeSum': value['timeSum'],
        'owner': UserDtoToJSON(value['owner']),
    };
}

